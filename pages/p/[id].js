import React, { useEffect, useState } from "react";

import axios from "axios";
import { useSession } from "next-auth/react";
import { motion } from "framer-motion";
import {
  AiOutlineHeart,
  AiFillHeart,
  AiOutlineLoading3Quarters,
} from "react-icons/ai";
import Head from "next/head";
import Comment from "../../components/Post/Comment";
import ImageP from "../../components/Post/ImageP";
import ProfileP from "../../components/Post/ProfileP";
import Desc from "../../components/Post/Desc";

const Index = ({ posts }) => {
  const { data: session } = useSession();
  const [likes, setLikes] = React.useState({
    state: false,
    loading: false,
    count: posts.likes,
  });
  React.useEffect(() => {
    if (posts.likesBy.find((item) => item.userId === session?.userId)) {
      setLikes({ ...likes, state: true });
    }
  }, [session]);
  const addLike = async () => {
    setLikes({ ...likes, loading: true });
    const res = await axios({
      method: "put",
      url: `/api/post/${posts.id}`,
      data: { userId: session?.userId },
    });
    if (res.data.status === "success") {
      return setLikes({ count: likes.count + 1, state: true, loading: false });
    } else if (res.data.status === "deleted") {
      return setLikes({ count: likes.count - 1, state: false, loading: false });
    }
  };
  return (
    <motion.div
      initial={{ y: 100 }}
      animate={{ y: 0 }}
      transition={{ duration: 0.4 }}>
      <Head>
        <title>{posts.title} | Plain</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='mt-[5rem] py-12'>
        <div className='relative w-[80rem] mx-auto'>
          <ImageP posts={posts} />
          <div className='flex gap-2 absolute -right-5 top-0 z-10 opacity-70 text-black text-lg drop-shadow-xl'>
            <button
              className={`${
                !session && "opacity-50 cursor-not-allowed active:scale-100"
              } rounded-full p-3 bg-white transition-transform active:scale-90`}
              onClick={session && addLike}>
              {likes.loading ? (
                <AiOutlineLoading3Quarters className='animate-spin' />
              ) : (
                <>{likes.state ? <AiFillHeart /> : <AiOutlineHeart />}</>
              )}
            </button>
          </div>
        </div>
        <div className='flex gap-5 w-[80rem] mx-auto'>
          <Comment posts={posts} />
          <div className='flex flex-col gap-5 mt-5 w-[45rem]'>
            <ProfileP posts={posts.author} />
            <Desc posts={posts} />
          </div>
        </div>
      </div>
    </motion.div>
  );
};

export const getServerSideProps = async (context) => {
  if (process.env.NODE_ENV === "development") {
    const res = await axios.get(
      `${process.env.DEV_URL}/api/post/${context.params.id}`
    );
    return { props: { posts: res.data } };
  } else {
    const res = await axios.get(
      `${process.env.PROD_URL}/api/post/${context.params.id}`
    );
    return { props: { posts: res.data } };
  }
};

export default Index;
